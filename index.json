[{"categories":["Documentation"],"content":"1. Create Personal Github Page. The first step in creating your Git Page is to navigate to your designated GitHub repo and create a repository in the format \u003cUSERNAME\u003e.github.io. Your reference guide for this step is the official Git Pages guide. Pro-Tip: Note that it is imperative that \u003cUSERNAME\u003e exactly matches your repo’s username, or it will not work. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:1","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"2. Install Hugo. You can navigate the Hugo installation guide, to install, setup and launch your local toy webpage. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:2","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"3. Create your site. Generate a sample website. Once you have your new site, you can navigate to Hugo Quick Start. Once you have Hugo installed, generating a new site is as easy as typing hugo new site \u003cfolder-name\u003e. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:3","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"4. Add a theme. You can browse through the free Hugo themes. Optionally, customize themes to suit your needs. Pro-Tip: Since these are free, you may add multiple themes simultaneously, and designate the desired one in config.toml. Watch out for configuration incompatibilities across themes, though. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:4","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"5. Add content. After launching your site, you can create your first post markdown file named my-first-post.md with the command hugo new posts/my-first-post.md. Pro-Tip: Hugo automatically generates posts with the draft parameter set to True. As soon as you are ready to post, you may change this to False. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:5","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"6. Start the Hugo server. hugo server -D will launch a local version of your site that you can view on http://localhost:1313/. Any changes to your content will be automatically posted to your local (temporary) server-hosted site. You can kill the local website via the command line by typing CTRL+C. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:6","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"7. Deploy. Once you have a starter webpage you are happy with, you should paste all files of your website into your local subdirectory. Then, enter the following command git submodule add -b master https://github.com/\u003cUSERNAME\u003e/\u003cUSERNAME\u003e.github.io.git public. This will create a Git submodule that will change your public subdirectory’s remote origin to your GitHub repository. Next, you can push the public subdirectory. Alternatively, the Hugo hosting guide (linked below) provides handy code for a deploy.sh executable file that pushes the public subdirectory to your GitHub repository, which GitHub will use to render your new website. Further information about these steps can be found on the Hosting on GitHub with Hugo pages. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:7","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Documentation"],"content":"8. Give me feedback. Notify me of any errors found or difficulties encountered. ","date":"2020-06-21","objectID":"/how-to-hugo/:0:8","tags":["Guides"],"title":"How to Hugo","uri":"/how-to-hugo/"},{"categories":["Blog"],"content":"This is the first post of my Git page, which I hope will serve as repository for various musings and explorations. ","date":"2020-06-20","objectID":"/my-first-post/:0:0","tags":[""],"title":"My Unique First Post","uri":"/my-first-post/"}]